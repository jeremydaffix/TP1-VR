
Le système de trees fournit déjà un système de colliders, pas besoin de rajouter un capsulecollider.

Créer un Prefab utilisant BoxBoy dans le dossier Prefabs (seul un modèle 3D .fbx est fourni).

Utilisation du shader Toon / Basic Outline pour les pièces et le cube.

Plutôt que d'utiliser des GameObject.Find(), mettre des propriétés publiques et glisser dessus l'objet dans l'éditeur.

Eviter de modifier directement les fichiers des assets téléchargés, plutôt effectuer une copie des fichiers modifiés, car cela permettra éventuellement de les mettre à jour plus tard sans écraser les modifications.

Ajout d'un rigidbody et d'un collider à BoxBoy et aux plans, en plus des cubes. Les plans sont marqués comme "kinematic" pour qu'ils ne bougent pas.
Afin que tout soit correctement géré par le moteur physique, il vaut mieux utiliser la méthode Moveposition() du RigidBody :
rb.MovePosition(rb.transform.position + new Vector3(x, 0, -y));

https://assetstore.unity.com/packages/2d/textures-materials/abstract/early-prototyping-material-kit-51761


Architecture du projet :

Les Assets "extérieurs" viennent s'installer automatiquement dans Assets/.
Pour éviter que tout soit mélangé, créer un répertoire spécialement pour les fichiers du projet en lui-même (ici, Assets/TP).

Assets/TP/Scenes -> les scènes
Assets/TP/Scripts -> le code C#
Assets/TP/Materials -> les matériaux
Assets/TP/Textures -> les images de textures
Assets/TP/Sounds -> les sons
Assets/TP/Prefabs -> les prefabs
Assets/TP/Models -> les modèles 3D


